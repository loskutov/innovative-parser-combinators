maxColumn = 120
docstrings = JavaDoc

continuationIndent.callSite = 2
continuationIndent.defnSite = 2

assumeStandardLibraryStripMargin = true
danglingParentheses = true
indentYieldKeyword = true
includeCurlyBraceInSelectChains = false

spaces.inImportCurlyBraces = false

newlines.alwaysBeforeTopLevelStatements = false

runner.optimizer.forceConfigStyleOnOffset = 50
runner.optimizer.forceConfigStyleMinArgCount = 5

#align.mixedOwners = true
#verticalMultilineAtDefinitionSite = true

align.arrowEnumeratorGenerator = true
align.openParenCallSite = false
align.tokens.add = [
  { code = "extends", owner = "Defn.(Class|Trait|Object)"}
  { code = "=>", owner = "Case"}
  { code = "//", owner = ".*"}
  { code = "{", owner = "Template"}
  { code = "}", owner = "Template"}
  { code = "%", owner = "Term.ApplyInfix" }
  { code = "%%", owner = "Term.ApplyInfix" }
  { code = "%%%", owner = "Term.Apply.Infix"}
  { code = "=", owner = "(Enumerator.Val|Defn.(Va(l|r)|Def|Type))"}
  { code = "=", owner = "Term.ApplyInfix"}
  { code = "<-", owner = "Enumerator.Generator"}
  { code = "->", owner = "Term.ApplyInfix"}
  { code = ":=", owner = "Term.ApplyInfix"}
  { code = "if", owner = "Term.If"}
  { code = "else", owner = "Term.If"}
]

rewrite.rules = [
  SortImports
  RedundantBraces
  RedundantParens
  PreferCurlyFors
  AvoidInfix
]
rewrite.neverInfix.excludeFilters = [
  until
  to
  by
  eq
  ne
  should
  contain
  must
  in
  be
  a
  an
  and
  or
  not
  taggedAs
  theSameElementsAs
  allElementsOf
  thrownBy
  synchronized
  have
  when
  stop
  pipeTo
  forward
  size
  ignore
  compose
  andThen
  orElse
  shouldBe
  empty
  intransitive
  canEqual
  at
  classifier
]

